{"version":3,"sources":["actions/index.ts","reducers/paginationReducer.ts","reducers/usersReducer.ts","reducers/index.ts","constants/index.ts","sagas/addUserSaga.ts","sagas/deleteUserSaga.ts","sagas/editUserSaga.ts","sagas/getUsersSaga.ts","sagas/index.ts","components/App/Users/PaginationMenu/index.tsx","components/App/Users/AddUserDialog/index.tsx","components/App/Users/UserCard/index.tsx","components/App/Users/DelateUserDialog/index.tsx","components/App/Users/EditUserDialog/index.tsx","containers/UsersContainer/index.ts","components/App/Users/index.tsx","components/App/index.tsx","index.tsx"],"names":["RESET","GET_USERS_SUCCEEDED","getUsersSuccess","users","type","FETCH_USERS","fetchUsers","DELETE_USER","EDIT_USER","ADD_USER","SET_SELECT_USER_DATA","initialState","pageCountSelect","selectUserData","name","surname","desc","reducApp","combineReducers","usersReducer","state","action","paginationReducer","API_USERS","addUserSaga","select","call","axios","post","put","console","log","deleteUserSaga","id","delete","data","editUserSaga","fetchUsersSaga","config","headers","get","rootSaga","all","takeLatest","PaginationMenu","setPageCountSelectHandler","itemsTotalCount","pagesCount","Math","ceil","spanItem","i","push","dotWidth","className","role","tabIndex","onClick","map","item","style","width","AddUserDialog","openDialog","setOpenDialog","setSelectUserDataHandler","addUserHandler","useState","buttonSend","setButtonSend","setDesc","descValidated","setDescValidated","descValidateHandler","val","length","setName","nameValidated","setNameValidated","nameValidateHandler","setSurname","surnameValidated","setSurnameValidated","setSurnameHandler","surnameValidateHandler","resetFormHandler","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","error","margin","label","fullWidth","variant","value","onChange","e","target","autoFocus","DialogActions","Button","UserCard","user","setOpenDelateDialog","setOpenEditDialog","setSelectUserData","Card","display","alignItems","justifyContent","CardContent","sx","Typography","fontSize","gutterBottom","Avatar","src","avatar","charAt","Stack","direction","spacing","IconButton","component","mb","color","DelateUserDialog","deleteHandler","Alert","severity","EditUserDialog","userData","editHandler","setDescHandler","setNameHandler","useEffect","UsersContainer","connect","dispatch","getUsersHandler","setPageCountSelect","fetchDeleteUserHandler","fetchEditUserHandler","fetchAddUserHandler","openAddUserDialog","setOpenAddUserDialog","openDelateDialog","openEditDialog","usersMap","startItem","stopItem","Container","maxWidth","Box","minHeight","marginTop","marginLeft","Masonry","columns","xs","sm","lg","Fab","position","bottom","right","App","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d82b8125.chunk.js","sourcesContent":["import { TUser } from 'types'\n\nexport type ActionTypes =\n  | TGetUsersSuccess\n  | TFetchUsers\n  | TResetStateAction\n  | TSetPageCountSelect\n  | TDeleteUser\n  | TSetSelectUserData\n  | TEditUser\n  | TAddUser\n\nexport const RESET = 'RESET'\nexport type TResetStateAction = {\n  type: typeof RESET\n}\nexport const resetState = (): TResetStateAction => ({\n  type: RESET,\n})\n\nexport const GET_USERS_SUCCEEDED = 'GET_USERS_SUCCEEDED'\nexport type TGetUsersSuccess = {\n  type: typeof GET_USERS_SUCCEEDED\n  users: TUser[]\n}\nexport const getUsersSuccess = (users: TUser[]): TGetUsersSuccess => ({\n  type: GET_USERS_SUCCEEDED,\n  users,\n})\n\nexport const FETCH_USERS = 'FETCH_USERS'\nexport type TFetchUsers = {\n  type: typeof FETCH_USERS\n}\nexport const fetchUsers = (): TFetchUsers => ({\n  type: FETCH_USERS,\n})\n\nexport const DELETE_USER = 'DELETE_USER'\nexport type TDeleteUser = {\n  type: typeof DELETE_USER\n}\nexport const deleteUser = (): TDeleteUser => ({\n  type: DELETE_USER,\n})\n\nexport const EDIT_USER = 'EDIT_USER'\nexport type TEditUser = {\n  type: typeof EDIT_USER\n}\nexport const editUser = (): TEditUser => ({\n  type: EDIT_USER,\n})\n\nexport const ADD_USER = 'ADD_USER'\nexport type TAddUser = {\n  type: typeof ADD_USER\n}\nexport const addUser = (): TAddUser => ({\n  type: ADD_USER,\n})\n\nexport const SET_PAGE_COUNT_SELECT = 'SET_PAGE_COUNT_SELECT'\n\nexport type TSetPageCountSelect = {\n  type: typeof SET_PAGE_COUNT_SELECT\n  pageCountSelect: number\n}\nexport const setPageCountSelect = (\n  pageCountSelect: number\n): TSetPageCountSelect => ({\n  type: SET_PAGE_COUNT_SELECT,\n  pageCountSelect,\n})\n\nexport const SET_SELECT_USER_DATA = 'SET_SELECT_USER_DATA'\nexport type TSetSelectUserData = {\n  type: typeof SET_SELECT_USER_DATA\n  selectUserData: TUser\n}\nexport const setSelectUserData = (\n  selectUserData: TUser\n): TSetSelectUserData => ({\n  type: SET_SELECT_USER_DATA,\n  selectUserData,\n})\n","import { ActionTypes, RESET } from 'actions'\n\ntype InitialStateType = {\n  pageCountSelect: number\n}\n\nconst initialState: InitialStateType = {\n  pageCountSelect: 0,\n}\nexport const paginationReducer = (\n  state = initialState,\n  action: ActionTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_PAGE_COUNT_SELECT':\n      return {\n        ...state,\n        pageCountSelect: action.pageCountSelect,\n      }\n    case RESET:\n      return initialState\n    default:\n      return state\n  }\n}\n","import {\n  ActionTypes,\n  GET_USERS_SUCCEEDED,\n  RESET,\n  SET_SELECT_USER_DATA,\n} from 'actions'\nimport { TUser } from 'types'\n\ntype InitialStateType = {\n  users: TUser[]\n  selectUserData: TUser\n}\n\nconst usersInit = [] as TUser[]\n\nconst initialState: InitialStateType = {\n  users: usersInit,\n  selectUserData: {\n    name: '',\n    surname: '',\n    desc: '',\n  },\n}\nexport const usersReducer = (\n  state = initialState,\n  action: ActionTypes\n): InitialStateType => {\n  switch (action.type) {\n    case GET_USERS_SUCCEEDED:\n      return {\n        ...state,\n        users: action.users,\n      }\n    case SET_SELECT_USER_DATA:\n      return {\n        ...state,\n        selectUserData: action.selectUserData,\n      }\n    case RESET:\n      return initialState\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { paginationReducer } from './paginationReducer'\nimport { usersReducer } from './usersReducer'\n\nexport const reducApp = combineReducers({\n  usersReducer,\n  paginationReducer,\n})\n\nexport type ReducAppType = typeof reducApp\nexport type AppStateType = ReturnType<ReducAppType>\n","export const NUM_ITEMS_ON_PAGE = 5\nexport const API_USERS = 'http://176.36.181.130:9011/api/'\n","import { call, put, select } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SagaIterator } from 'redux-saga'\nimport { fetchUsers } from 'actions'\nimport { API_USERS } from '../constants'\n\nexport function* addUserSaga(): SagaIterator {\n  try {\n    const selectUserData = yield select(\n      (state) => state.usersReducer.selectUserData\n    )\n    yield call(axios.post, `${API_USERS}users`, selectUserData)\n    yield put(fetchUsers())\n  } catch (error) {\n    console.log('Get Users Error:', error)\n  }\n}\n","import { call, put, select } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SagaIterator } from 'redux-saga'\nimport { getUsersSuccess } from 'actions'\nimport { API_USERS } from '../constants'\n\nexport function* deleteUserSaga(): SagaIterator {\n  try {\n    const id = yield select((state) => state.usersReducer.selectUserData.id)\n    const { data } = yield call(axios.delete, `${API_USERS}user/${id}`)\n    yield put(getUsersSuccess(data))\n  } catch (error) {\n    console.log('Get Users Error:', error)\n  }\n}\n","import { call, put, select } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SagaIterator } from 'redux-saga'\nimport { fetchUsers, getUsersSuccess } from 'actions'\nimport { API_USERS } from '../constants'\n\nexport function* editUserSaga(): SagaIterator {\n  try {\n    const selectUserData = yield select(\n      (state) => state.usersReducer.selectUserData\n    )\n    yield call(\n      axios.put,\n      `${API_USERS}user/${selectUserData.id}`,\n      selectUserData\n    )\n    yield put(fetchUsers())\n  } catch (error) {\n    console.log('Get Users Error:', error)\n  }\n}\n","import { call, put } from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SagaIterator } from 'redux-saga'\nimport { getUsersSuccess } from 'actions'\nimport { API_USERS } from '../constants'\n\nconst config = {\n  headers: {\n    'Content-Security-Policy': 'upgrade-insecure-requests',\n  },\n}\nexport function* fetchUsersSaga(): SagaIterator {\n  try {\n    const { data } = yield call(axios.get, `${API_USERS}users`, config)\n    yield put(getUsersSuccess(data))\n  } catch (error) {\n    console.log('Get Users Error:', error)\n  }\n}\n","import { ADD_USER, DELETE_USER, EDIT_USER, FETCH_USERS } from 'actions'\nimport { SagaIterator } from 'redux-saga'\nimport { takeLatest, all } from 'redux-saga/effects'\nimport { addUserSaga } from './addUserSaga'\nimport { deleteUserSaga } from './deleteUserSaga'\nimport { editUserSaga } from './editUserSaga'\nimport { fetchUsersSaga } from './getUsersSaga'\n\nexport function* rootSaga(): SagaIterator {\n  yield all([\n    takeLatest(FETCH_USERS, fetchUsersSaga),\n    takeLatest(DELETE_USER, deleteUserSaga),\n    takeLatest(EDIT_USER, editUserSaga),\n    takeLatest(ADD_USER, addUserSaga),\n  ])\n}\n","import React from 'react'\nimport './styles.css'\n// import FirstPageIcon from '@material-ui/icons/FirstPage'\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore'\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext'\nimport { NUM_ITEMS_ON_PAGE } from '../../../../constants'\n// import LastPageIcon from '@material-ui/icons/LastPage'\n\nexport type PaginationMenuProps = {\n  setPageCountSelectHandler: (page: number) => void\n  pageCountSelect: number\n  itemsTotalCount: number\n}\n\nexport const PaginationMenu: React.FC<PaginationMenuProps> = ({\n  setPageCountSelectHandler,\n  pageCountSelect,\n  itemsTotalCount,\n}) => {\n  const pagesCount = Math.ceil(itemsTotalCount / NUM_ITEMS_ON_PAGE)\n  const spanItem = []\n  for (let i = 0; i < pagesCount; i += 1) spanItem.push(i)\n  const dotWidth = 800 / pagesCount\n\n  return (\n    <div className=\"short-event-card-pages-container\">\n      <div className=\"short-event-card-pages\">\n        {pagesCount > 3 && (\n          <span\n            className=\"short-event-card-pages--span\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              setPageCountSelectHandler(\n                pageCountSelect > 0 ? pageCountSelect - 1 : 0\n              )\n            }}\n          >\n            <NavigateBeforeIcon />\n          </span>\n        )}\n        {spanItem.map(\n          (item) =>\n            ((pagesCount < 16 ||\n              item < 3 ||\n              (pageCountSelect < 6 && item < 8) ||\n              (pageCountSelect > pagesCount - 7 && item > pagesCount - 9) ||\n              pagesCount - 4 < item ||\n              (item - 3 < pageCountSelect && item + 3 > pageCountSelect)) && (\n              <span\n                key={`page-${pagesCount}-${item}`}\n                className={`short-event-card-pages--span \n            ${pageCountSelect === item ? 'active' : ''}`}\n                role=\"button\"\n                tabIndex={item}\n                onClick={() => {\n                  setPageCountSelectHandler(item)\n                }}\n              >\n                {item + 1}\n              </span>\n            )) || (\n              <span\n                className=\"card-pages-dot\"\n                style={{ width: `${dotWidth}px` }}\n              >\n                {' '}\n              </span>\n            )\n        )}\n        {pagesCount > 3 && (\n          <span\n            className=\"short-event-card-pages--span\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              setPageCountSelectHandler(\n                pageCountSelect < pagesCount - 1\n                  ? pageCountSelect + 1\n                  : pagesCount - 1\n              )\n            }}\n          >\n            <NavigateNextIcon />\n          </span>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport { TUser } from 'types'\n\nexport type AddUserDialogProps = {\n  openDialog: boolean\n  setOpenDialog: (openDialog: boolean) => void\n  setSelectUserDataHandler: (selectUserData: TUser) => void\n  addUserHandler: () => void\n}\nexport const AddUserDialog: React.FC<AddUserDialogProps> = ({\n  openDialog,\n  setOpenDialog,\n  setSelectUserDataHandler,\n  addUserHandler,\n}) => {\n  const [buttonSend, setButtonSend] = useState(false)\n\n  const [desc, setDesc] = useState('')\n  const [descValidated, setDescValidated] = useState(false)\n  const descValidateHandler = (val: string) => {\n    setDescValidated(val.length > 1 && val.length < 50)\n  }\n  const setDescHandler = (val: string) => {\n    setDesc(val)\n    descValidateHandler(val)\n  }\n\n  const [name, setName] = useState('')\n  const [nameValidated, setNameValidated] = useState(false)\n  const nameValidateHandler = (val: string) => {\n    setNameValidated(val.length > 1 && val.length < 50)\n  }\n  const setNameHandler = (val: string) => {\n    setName(val)\n    nameValidateHandler(val)\n  }\n\n  const [surname, setSurname] = useState('')\n  const [surnameValidated, setSurnameValidated] = useState(false)\n  const surnameValidateHandler = (val: string) => {\n    setSurnameValidated(val.length > 1 && val.length < 50)\n  }\n  const setSurnameHandler = (val: string) => {\n    setSurname(val)\n    surnameValidateHandler(val)\n  }\n\n  const resetFormHandler = () => {\n    setOpenDialog(false)\n\n    setDesc('')\n    setName('')\n    setSurname('')\n\n    setDescValidated(false)\n    setNameValidated(false)\n    setSurnameValidated(false)\n\n    setButtonSend(false)\n  }\n\n  const formValidate = () => {\n    setButtonSend(true)\n    descValidateHandler(desc)\n    nameValidateHandler(name)\n    setSurnameHandler(surname)\n    if (descValidated && nameValidated && surnameValidated) {\n      setSelectUserDataHandler({\n        name,\n        surname,\n        desc,\n      })\n      addUserHandler()\n      resetFormHandler()\n    }\n  }\n\n  return (\n    <div>\n      <Dialog open={openDialog} onClose={() => setOpenDialog(true)}>\n        <DialogTitle>Добавить нового пользователя</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Чтобы добавить пользователя - заполните, пожалуйста, все поля\n          </DialogContentText>\n\n          <TextField\n            id=\"name\"\n            error={!nameValidated && buttonSend}\n            margin=\"dense\"\n            label=\"Имя\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={name}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setNameHandler(e.target.value)\n            }\n          />\n          <TextField\n            id=\"lastname\"\n            error={!surnameValidated && buttonSend}\n            margin=\"dense\"\n            label=\"Фамилия\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={surname}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSurnameHandler(e.target.value)\n            }\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"desc\"\n            error={!descValidated && buttonSend}\n            label=\"Описание\"\n            type=\"desc\"\n            fullWidth\n            variant=\"standard\"\n            value={desc}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setDescHandler(e.target.value)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={resetFormHandler}>Отмена</Button>\n          <Button onClick={formValidate}>Добавить</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Typography from '@mui/material/Typography'\nimport { TUser } from 'types'\nimport { Avatar, IconButton, Stack } from '@mui/material'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\nimport EditIcon from '@mui/icons-material/Edit'\n\nexport type UserCardProps = {\n  user: TUser\n  setOpenDelateDialog: (openDelateDialog: boolean) => void\n  setOpenEditDialog: (openEditDialog: boolean) => void\n  setSelectUserData: (userData: TUser) => void\n}\nexport const UserCard: React.FC<UserCardProps> = ({\n  user,\n  setOpenDelateDialog,\n  setOpenEditDialog,\n  setSelectUserData,\n}) => {\n  return (\n    <Card\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <CardContent\n        sx={{\n          width: '100%',\n        }}\n      >\n        <Typography\n          sx={{\n            fontSize: 14,\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n          gutterBottom\n        >\n          <Avatar src={user.avatar}>\n            {`${user.name.charAt(0)}${user.surname.charAt(0)}`}\n          </Avatar>\n          <Stack direction=\"row\" spacing={1}>\n            <IconButton\n              onClick={() => {\n                setOpenEditDialog(true)\n                setSelectUserData(user)\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                setOpenDelateDialog(true)\n                setSelectUserData(user)\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </Stack>\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {`${user.name} ${user.surname}`}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {user.desc}\n        </Typography>\n        <Typography variant=\"body2\">{`id: ${user.id}`}</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport { Alert } from '@mui/material'\n\nexport type DelateUserDialogProps = {\n  openDialog: boolean\n  setOpenDialog: (openDialog: boolean) => void\n  deleteHandler: () => void\n}\nexport const DelateUserDialog: React.FC<DelateUserDialogProps> = ({\n  openDialog,\n  setOpenDialog,\n  deleteHandler,\n}) => {\n  return (\n    <div>\n      <Dialog open={openDialog} onClose={() => setOpenDialog(true)}>\n        <DialogTitle>Удалить пользователя</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Alert severity=\"error\">\n              Вы действительно хотите удалить пользователя?\n            </Alert>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>Отмена</Button>\n          <Button\n            onClick={() => {\n              setOpenDialog(false)\n              deleteHandler()\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport { TUser } from 'types'\n\nexport type EditUserDialogProps = {\n  openDialog: boolean\n  setOpenDialog: (openDialog: boolean) => void\n  userData: TUser\n  setSelectUserDataHandler: (userData: TUser) => void\n  editHandler: () => void\n}\nexport const EditUserDialog: React.FC<EditUserDialogProps> = ({\n  openDialog,\n  setOpenDialog,\n  userData,\n  setSelectUserDataHandler,\n  editHandler,\n}) => {\n  const [buttonSend, setButtonSend] = useState(false)\n\n  const [desc, setDesc] = useState('')\n  const [descValidated, setDescValidated] = useState(false)\n  const descValidateHandler = (val: string) => {\n    setDescValidated(val.length > 1 && val.length < 50)\n  }\n  const setDescHandler = (val: string) => {\n    setDesc(val)\n    descValidateHandler(val)\n  }\n\n  const [name, setName] = useState('')\n  const [nameValidated, setNameValidated] = useState(false)\n  const nameValidateHandler = (val: string) => {\n    setNameValidated(val.length > 1 && val.length < 50)\n  }\n  const setNameHandler = (val: string) => {\n    setName(val)\n    nameValidateHandler(val)\n  }\n\n  const [surname, setSurname] = useState('')\n  const [surnameValidated, setSurnameValidated] = useState(false)\n  const surnameValidateHandler = (val: string) => {\n    setSurnameValidated(val.length > 1 && val.length < 50)\n  }\n  const setSurnameHandler = (val: string) => {\n    setSurname(val)\n    surnameValidateHandler(val)\n  }\n\n  const resetFormHandler = () => {\n    setOpenDialog(false)\n\n    setDesc('')\n    setName('')\n    setSurname('')\n\n    setDescValidated(false)\n    setNameValidated(false)\n    setSurnameValidated(false)\n\n    setButtonSend(false)\n  }\n\n  const formValidate = () => {\n    setButtonSend(true)\n    descValidateHandler(desc)\n    nameValidateHandler(name)\n    setSurnameHandler(surname)\n    if (descValidated && nameValidated && surnameValidated) {\n      setOpenDialog(false)\n      setSelectUserDataHandler({ ...userData, name, surname, desc })\n      editHandler()\n    }\n  }\n\n  useEffect(() => {\n    setDescHandler(userData.desc)\n    setNameHandler(userData.name)\n    setSurnameHandler(userData.surname)\n  }, [userData])\n\n  return (\n    <div>\n      <Dialog open={openDialog} onClose={() => setOpenDialog(true)}>\n        <DialogTitle>Редактировать пользователя</DialogTitle>\n        <DialogContent>\n          <TextField\n            id=\"name\"\n            error={!nameValidated && buttonSend}\n            margin=\"dense\"\n            label=\"Имя\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={name}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setNameHandler(e.target.value)\n            }\n          />\n          <TextField\n            id=\"lastname\"\n            error={!surnameValidated && buttonSend}\n            margin=\"dense\"\n            label=\"Фамилия\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={surname}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSurnameHandler(e.target.value)\n            }\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"desc\"\n            error={!descValidated && buttonSend}\n            label=\"Описание\"\n            type=\"desc\"\n            fullWidth\n            variant=\"standard\"\n            value={desc}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setDescHandler(e.target.value)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={resetFormHandler}>Отмена</Button>\n          <Button onClick={formValidate}>Изменить</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import { Dispatch } from 'redux'\nimport { connect, ConnectedProps } from 'react-redux'\nimport {\n  ActionTypes,\n  addUser,\n  deleteUser,\n  editUser,\n  fetchUsers,\n  setPageCountSelect,\n  setSelectUserData,\n} from 'actions'\nimport { AppStateType } from 'reducers'\nimport { Users } from 'components/App/Users'\nimport { TUser } from 'types'\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    users: state.usersReducer.users,\n    pageCountSelect: state.paginationReducer.pageCountSelect,\n    selectUserData: state.usersReducer.selectUserData,\n  }\n}\n\ntype MapDispatchPropsType = {\n  getUsersHandler: () => void\n  setPageCountSelectHandler: (pageCountSelect: number) => void\n  fetchDeleteUserHandler: () => void\n  fetchEditUserHandler: () => void\n  fetchAddUserHandler: () => void\n  setSelectUserDataHandler: (selectUserData: TUser) => void\n}\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch<ActionTypes>\n): MapDispatchPropsType => {\n  return {\n    getUsersHandler: () => {\n      dispatch(fetchUsers())\n    },\n    setPageCountSelectHandler: (pageCountSelect) => {\n      dispatch(setPageCountSelect(pageCountSelect))\n    },\n    fetchDeleteUserHandler: () => {\n      dispatch(deleteUser())\n    },\n    fetchEditUserHandler: () => {\n      dispatch(editUser())\n    },\n    fetchAddUserHandler: () => {\n      dispatch(addUser())\n    },\n    setSelectUserDataHandler: (selectUserData) => {\n      dispatch(setSelectUserData(selectUserData))\n    },\n  }\n}\nexport const UsersContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users)\n\ntype TOwnProps = {\n  handleShowMap: () => void\n}\n\nexport type TUsersContainer = ConnectedProps<typeof UsersContainer> & TOwnProps\n","import React, { useEffect, useState } from 'react'\nimport Masonry from '@mui/lab/Masonry'\nimport { TUser } from 'types'\nimport PersonAddIcon from '@mui/icons-material/PersonAdd'\nimport { Box, Container, Fab } from '@mui/material'\nimport { NUM_ITEMS_ON_PAGE } from '../../../constants'\nimport { PaginationMenu } from './PaginationMenu'\nimport { AddUserDialog } from './AddUserDialog'\nimport { UserCard } from './UserCard'\nimport { DelateUserDialog } from './DelateUserDialog'\nimport { EditUserDialog } from './EditUserDialog'\n\nexport type UsersProps = {\n  getUsersHandler: () => void\n  users: TUser[]\n  pageCountSelect: number\n  setPageCountSelectHandler: (pageCountSelect: number) => void\n  fetchDeleteUserHandler: () => void\n  fetchEditUserHandler: () => void\n  fetchAddUserHandler: () => void\n  setSelectUserDataHandler: (selectUserData: TUser) => void\n  selectUserData: TUser\n}\nexport const Users: React.FC<UsersProps> = ({\n  getUsersHandler,\n  users,\n  pageCountSelect,\n  setPageCountSelectHandler,\n  fetchDeleteUserHandler,\n  fetchEditUserHandler,\n  fetchAddUserHandler,\n  setSelectUserDataHandler,\n  selectUserData,\n}) => {\n  useEffect(() => {\n    getUsersHandler()\n  }, [getUsersHandler])\n\n  const [openAddUserDialog, setOpenAddUserDialog] = useState(false)\n  const [openDelateDialog, setOpenDelateDialog] = useState(false)\n  const [openEditDialog, setOpenEditDialog] = useState(false)\n\n  const userDataEmpty: TUser = {\n    desc: '',\n    name: '',\n    surname: '',\n  }\n  // const [selectUserData, setSelectUserData] = useState(userDataEmpty)\n\n  const usersMap = []\n  const startItem = pageCountSelect * NUM_ITEMS_ON_PAGE\n  const stopItem =\n    startItem + NUM_ITEMS_ON_PAGE < users.length\n      ? startItem + NUM_ITEMS_ON_PAGE\n      : users.length\n  for (let i = startItem; i < stopItem; i += 1) {\n    usersMap.push(\n      <UserCard\n        key={`user-${users[i].id}`}\n        user={users[i]}\n        setOpenDelateDialog={setOpenDelateDialog}\n        setOpenEditDialog={setOpenEditDialog}\n        setSelectUserData={setSelectUserDataHandler}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"lg\">\n        <Box\n          sx={{ width: '100%', minHeight: 600, marginTop: 3, marginLeft: 1 }}\n        >\n          <Masonry columns={{ xs: 1, sm: 2, lg: 3 }} spacing={2}>\n            {usersMap}\n          </Masonry>\n        </Box>\n      </Container>\n      <Fab\n        variant=\"extended\"\n        color=\"primary\"\n        aria-label=\"add\"\n        style={{ position: 'absolute', bottom: 20, right: 40 }}\n        onClick={() => {\n          setOpenAddUserDialog(true)\n        }}\n      >\n        <PersonAddIcon />\n      </Fab>\n      <PaginationMenu\n        setPageCountSelectHandler={setPageCountSelectHandler}\n        pageCountSelect={pageCountSelect}\n        itemsTotalCount={users.length}\n      />\n      <AddUserDialog\n        openDialog={openAddUserDialog}\n        setOpenDialog={setOpenAddUserDialog}\n        setSelectUserDataHandler={setSelectUserDataHandler}\n        addUserHandler={fetchAddUserHandler}\n      />\n      <EditUserDialog\n        openDialog={openEditDialog}\n        setOpenDialog={setOpenEditDialog}\n        userData={selectUserData}\n        setSelectUserDataHandler={setSelectUserDataHandler}\n        editHandler={fetchEditUserHandler}\n      />\n\n      <DelateUserDialog\n        openDialog={openDelateDialog}\n        setOpenDialog={setOpenDelateDialog}\n        deleteHandler={fetchDeleteUserHandler}\n      />\n    </>\n  )\n}\n","import { UsersContainer } from 'containers/UsersContainer'\nimport React from 'react'\nimport './styles.css'\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <UsersContainer />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport createSagaMiddleware from 'redux-saga'\nimport { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { reducApp } from 'reducers'\nimport { Provider } from 'react-redux'\nimport { rootSaga } from './sagas'\nimport { App } from './components/App'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  reducApp,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}